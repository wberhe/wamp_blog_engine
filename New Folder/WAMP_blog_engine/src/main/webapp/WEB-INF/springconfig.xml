<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <aop:aspectj-autoproxy/>

 
   
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id = "blogService" class = "cs544.wamp_blog_engine.service.impl.BlogService">
        <property name="blogDAO" ref="blogDAO" />
    </bean>    	

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" 
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <!-- OR mapping files. -->
        <property name="packagesToScan" value="cs544.wamp_blog_engine.domain"/>        
    </bean>

    <bean id="beanValidationEventListener" class="org.hibernate.cfg.beanvalidation.BeanValidationEventListener">  
        <constructor-arg index="0" ref="validator" />  
        <constructor-arg index="1">  
            <props/>  
        </constructor-arg>  
    </bean>  

    <!-- the datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/blog_engine" />
        <property name="username" value="root" />
        <property name="password" value="weldu" />
    </bean>

    <!-- hibernate Properties -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect
                </prop>
                <prop key="connection.pool_size">1</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!--http://davidmarquis.wordpress.com/2010/11/25/using-hibernate-event-based-validation-with-c/-->
                <!--                to allow us to use hibernate custom validator with injection. 
                on form submit, the vlidator is created using Spring's validator factory==> injection work
                on transaction commit, hibernate will create validators using its own validator factory==> injections does not work
                ==> we will get null pointer execption
                solution: disable hibernate's on commit validation, only use the on form commit.-->
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
    <bean id="blogDAO" class="cs544.wamp_blog_engine.dao.impl.BlogDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="categoryDAO" class="cs544.wamp_blog_engine.dao.impl.CategoryDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="commentDAO" class="cs544.wamp_blog_engine.dao.impl.CommentDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="credentialDAO" class="cs544.wamp_blog_engine.dao.impl.CredentialDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="loginHistoryDAO" class="cs544.wamp_blog_engine.dao.impl.LoginHistoryDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="postDAO" class="cs544.wamp_blog_engine.dao.impl.PostDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="ratingDAO" class="cs544.wamp_blog_engine.dao.impl.RatingDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="tagDAO" class="cs544.wamp_blog_engine.dao.impl.TagDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    <bean id="userDAO" class="cs544.wamp_blog_engine.dao.impl.UserDAOImpl">
        <property name="sf" ref="sessionFactory"/>
    </bean> 
    
    
    <!-- User service injection beans-->
    <bean id="userService" class="cs544.wamp_blog_engine.service.impl.UserService">
        <constructor-arg name="userDAO" ref="userDAO"/>
        <constructor-arg name="credentialDAO" ref="credentialDAO"/>
        <constructor-arg name="notificationSevice" ref="notificationService"/>
    </bean>
    <!-- Category Tag injection beans-->
    <bean id="categoryTag" class="cs544.wamp_blog_engine.service.impl.CategoryTagService">
        <property  name="categoryDAO" ref="categoryDAO"/>
        <property name="tagDAO" ref="tagDAO"/>
    </bean>

    <!-- Post service injection beans-->
    <bean id="postService" class="cs544.wamp_blog_engine.service.impl.PostService">
        <property name="postDAO" ref="postDAO"/>
        <property name="blogDAO" ref="blogDAO"/>
        <property name="commentDao" ref="commentDAO"/>
        <property name="categoryDAO" ref="categoryDAO"/>
        <property name="tagDAO" ref="tagDAO"/>
        <property name="notificationService" ref="notificationService"/>
        <property name="ratingDAO" ref="ratingDAO"/>
     
    </bean>
    
    <!--Comment Service injection beans-->
    <bean id = "commentService" class="cs544.wamp_blog_engine.service.impl.CommentService">
        <property name="commentDAO" ref="commentDAO"/>
    </bean>
    
    
    <!-- notication Service injection beans -->
    <bean id="notificationService" class="cs544.wamp_blog_engine.service.impl.NotificationService">
        <property name="fromAdminTemplate" ref="fromAdminTemplate"/>
        <property name="toAdminTemplate" ref="toAdminTemplate"/>
        <property name="toBloggerTemplate" ref="toBloggerTemplate"/>
        <property name="toFollowersTemplate" ref="toFollowersTemplate"/>
        <property name="javaMailSender" ref="javaMailSender"/>
        
    </bean>
    <!-- Setting Service injection beans -->
    <bean id="settingsService" class="cs544.wamp_blog_engine.service.impl.SettingsService">
        <property name="categoryDAO" ref="categoryDAO"/>
        <property name="tagDAO" ref="tagDAO"/>
    </bean>
    
    <!--Email Service--> 
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <property name="username" value="mum.ea.project@gmail.com" />
        <property name="password" value="mum.ea.project@2014" /> 
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>                                
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>
  
    <bean id="fromAdminTemplate"
          class="org.springframework.mail.SimpleMailMessage"> 
        <property name="from" value="mum.ea.project@gmail.com" />
        <property name="to" value="wel.berhe@gmail.com" />
        <property name="subject" value="WAMPBlogger: Notification" />
        <property name="text">
            <value>
		<![CDATA[
Dear %1$s,

%2$s

Regards,
Administrator.
		]]>
            </value>
        </property>
    </bean>
    <bean id="toAdminTemplate"
          class="org.springframework.mail.SimpleMailMessage"> 
        <property name="from" value="mum.ea.project@gmail.com" />
        <property name="to" value="wel.berhe@gmail.com" />
        <property name="subject" value="WAMPBlogger: Support" />
        <property name="text">
            <value>
		<![CDATA[
Dear Administrator,

%1$s

Regards,
%2s.
		]]>
            </value>
        </property>
    </bean>
    <bean id="toFollowersTemplate"
          class="org.springframework.mail.SimpleMailMessage"> 
        <property name="from" value="mum.ea.project@gmail.com" />
        <property name="to" value="wel.berhe@gmail.com" />
        <property name="subject" value="WAMPBlogger: New Post Notification" />
        <property name="text">
            <value>
		<![CDATA[
Dear %1$s,

a new post titled:%2$s was posted on the Blog:%3$s at: %4$tD %4$tT 

Regards,
Administrator.
		]]>
            </value>
        </property>
    </bean>
    <bean id="toBloggerTemplate"
          class="org.springframework.mail.SimpleMailMessage"> 
        <property name="from" value="mum.ea.project@gmail.com" />
        <property name="to" value="wel.berhe@gmail.com" />
        <property name="subject" value="WAMPBlogger: a New Comment needs approval" />
        <property name="text">
            <value>
		<![CDATA[
Dear %1$s,

a new comment was posted on the post: %2$s of the Blog: %3$s at %4$tD %4$tT that needs approval.

Regards,
Administrator.
		]]>
            </value>
        </property>
    </bean>

    <!--Email Service-->
    
    
    
    <!--Security-->
    
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
    <sec:global-method-security secured-annotations="enabled"/>
    <sec:http >
        <sec:intercept-url pattern="/SpringLoginPage.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/LoginFailure.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/resources/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/addCredential" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/addUser" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/loginFail" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/gohome" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/**" access="ROLE_BLOGGER,ROLE_ADMIN"/>
        
        <sec:form-login login-page="/SpringLoginPage.html" default-target-url="/blog" authentication-failure-url="/loginFail"/>
        <sec:logout delete-cookies="true" invalidate-session="true" logout-success-url="/"/>
    </sec:http>
    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="test" password="test" authorities="ROLE_BLOGGER"/>
            </sec:user-service>
        </sec:authentication-provider>
        <sec:authentication-provider >
            <sec:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username,password, isnull(blocked)=0 enabled from credential where username=?" authorities-by-username-query="select username, previledge as authority from credential where username=?"/>
        </sec:authentication-provider>
    </sec:authentication-manager>
    <!--Security-->
</beans>
